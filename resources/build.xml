<project basedir='../' default='build' name='processingLibs'>

	<description>
		processingLibs. ant build file.
	</description>

	<loadproperties srcfile='resources/build.properties'/>

	<path id='library-classpath'>
		<fileset dir='${libraryClasspath}'>
			<include name='core.jar'/>
		</fileset>
	</path>


<!-- #### (4) set the java version that should be used to compile your library. #### -->
<!-- This is set in build.properties -->

	<!-- #### 	the following items are properties that will be used to make changes to
				the html document template. values of properties will be
				implemented ito the document automatically. #### -->

<!-- #### (5) who is the author of this library?  edit value.  #### -->
	<property name='author' value='James Britt'/>

<!-- #### (6) which copyright?  edit value.  #### -->
	<property name='copyright' value='(c) 2013'/>

<!-- #### (7) give your library a name. edit value.  #### -->
	<property name='libraryName' value='AnimataP5'/>

<!-- #### (8) give your library a name. edit value.   #### -->
	<property name='versionNumber' value='0.3.0'/>

<!-- #### (9) your contact url. edit value. #### -->
	<property name='yourLink' value='http://neurogami.com'/>

<!-- #### (10) a comma separated list of keywords describing your library. edit value. #### -->
	<property name='keywords' value='music,live performance,processing,midi,animata,renoise,OSC'/>

<!-- #### (11) a comma separated list of platforms the library has been tested. edit value. #### -->
	<property name='tested:platform' value='Ubuntu'/>

<!-- #### (12) the processing version this library has been tested with. edit value. #### -->
	<property name='tested:processingVersion' value='2.0b8'/>

<!-- #### (13) does the library depend on any other library, dll, jnilib, etc. edit value. #### -->
	<property name='tested:dependencies' value='oscP5'/>

<!-- #### (14) where can the source code be found? edit value. #### -->
	<property name='source:host' value='GitHub'/>
	<property name='source:url' value='http://github.com/neurogami/animataP5'/>
	<property name='source:repository' value='http://github.com/neurogami/animataP5'/>

	<!-- no changes or adjustments required below -->

	<taskdef resource='net/sf/antcontrib/antcontrib.properties'>
		<classpath>
			<pathelement location='./resources/code/ant-contrib-1.0b3.jar'/>
		</classpath>
	</taskdef>
	<property name='jarFile' value='${libraryName}.jar'/>
	<property location='src' name='src'/>
	<property location='bin' name='bin'/>
	<property location='reference' name='reference'/>
	<property location='distribution' name='dist'/>


	<target name='init'>
		<echo>Properties initialized.
			src path			        ${src}
			bin path 			        ${bin}
			dist path 		        ${dist}
			libraryClasspath		  ${libraryClasspath}
			processing Libraries	${processing}
			java version		      ${javaVersion}
			java target		        ${javaTarget}
		</echo>
		<echo>building library ...</echo>
		<!-- Create the time stamp -->
		<tstamp>
			<format offset='0' pattern='MM/dd/yyyy' property='date' unit='hour'/>
		</tstamp>
		<mkdir dir='${dist}'/>
	</target>

	<!-- compile the library -->
	<target depends='init' description='compile the source' name='compile'>
		<!-- javac destdir='${bin}' includeantruntime='false' source='${javaVersion}' srcdir='${src}' target='${javaTarget}' -->
		<!-- delete and recreate the  ${bin} folder -->
		<delete dir='${bin}'/>
		<mkdir dir='${bin}'/>

		<javac destdir='${bin}' includeantruntime='false' source='1.6' srcdir='${src}' target='1.6'>
			<classpath>
				<path refid='library-classpath'/>
			</classpath>
		</javac>
	</target>

	<!-- build the distribution of the library -->
	<target depends='compile' description='generate the distribution' name='build'>
		<!-- delete the previous content of the ${dist} folder -->
		<delete dir='${dist}'/>


		<!-- build the structure for ${dist} -->
		<mkdir dir='${dist}'/>
		<mkdir dir='${dist}/library'/>
		<mkdir dir='${dist}/examples'/>
		<mkdir dir='${dist}/reference'/>
		<mkdir dir='${dist}/src'/>
		<jar basedir='${bin}' jarfile='${dist}/library/${jarFile}'/>
		<copy todir='${dist}/examples'>
			<fileset dir='examples'/>
		</copy>
		<copy todir='${dist}/src'>
			<fileset dir='src'/>
		</copy>

		<!-- create the java reference of the library -->
		<mkdir dir='${reference}'/>
		<javadoc bottom='processing library ${libraryName} by ${author}. ${copyright}' classpath='${libraryClasspath}/core.jar' destdir='${reference}' doctitle='Javadocs: ${libraryName}' public='true' stylesheetfile='resources/stylesheet.css' verbose='false' version='false' windowtitle='Javadocs: ${libraryName}'>
			<taglet name='ExampleTaglet' path='resources/code'/>
			<fileset defaultexcludes='yes' dir='${src}'>
				<!-- #### (9) add packages to be added to reference. #### -->
				<include name='**/*'/>
			</fileset>
		</javadoc>

		<copy todir='${dist}/reference'>
			<fileset dir='${reference}'/>
		</copy>

		<!-- copy the jar file to processing's libraries -->
		<mkdir dir='${processing}/${libraryName}'/>
		<copy todir='${processing}/${libraryName}'>
			<fileset dir='${dist}'/>
		</copy>

		<!-- zip the distribution of the library -->
		
		<zip destfile='${dist}/${libraryName}.zip'>
      <zipfileset dir='${dist}' excludes='*.zip' includes='**/*.*' prefix='${libraryName}'/>
    </zip>


		<!-- organize the ${dist} folder -->
		<mkdir dir='${dist}/web'/>
		<move todir='${dist}/web/reference'>
			<fileset dir='${dist}/reference'/>
		</move>

		<move todir='${dist}/web/examples'>
			<fileset dir='${dist}/examples'/>
		</move>

		<!--		<delete dir='${dist}/library'/> -->

		<copy todir='${dist}/web'>
			<fileset dir='web'/>
		</copy>

		<!--
		format the index.html file.
		regular expressions are used to parse the web index.html file.
		key words starting and ending with ## are replaced by values
		defined earlier in the beginning of this build file.
		-->

		<replaceregexp file='${dist}/web/index.html' flags='g' match='##yourLibrary##' replace='${libraryName}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##author##' replace='${author}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##versionNumber##' replace='${versionNumber}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##yourLink##' replace='${yourLink}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##date##' replace='${date}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##keywords##' replace='${keywords}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##tested:platform##' replace='${tested:platform}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##tested:processingVersion##' replace='${tested:processingVersion}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##tested:dependencies##' replace='${tested:dependencies}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##source:host##' replace='${source:host}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##source:url##' replace='${source:url}'/>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='##source:repository##' replace='${source:repository}'/>

		<echo>---------------------</echo>
		<antcall target='processExamples'/>
		<echo>---------------------</echo>

		<replaceregexp file='${dist}/web/index.html' flags='g' match='##examples##' replace=''/>


		<!-- finish organizating library's distribution -->
		<mkdir dir='${dist}/web/download'/>
		<copy file='${dist}/${libraryName}.zip' todir='${dist}/web/download'/>

		<copy todir='${processing}/${libraryName}/reference'>
			<fileset dir='${reference}'/>
		</copy>

		<!-- done, finished. -->
		<echo>done, finished.</echo>
	</target>



	<!-- parsing the examples folder -->
	<target name='processExamples'>
		<dirset dir='examples' excludes='*/*' id='examples.contents'/>
		<property name='examples.list' refid='examples.contents'/>
		<foreach delimiter=';' list='${examples.list}' param='exampleDir' target='addExamples'>
		</foreach>
	</target>

	<target name='addExamples'>
		<replaceregexp file='${dist}/web/index.html' flags='g' match='(##examples##)' replace='&lt;li&gt;&lt;a href=&quot;examples/${exampleDir}/${exampleDir}.pde&quot;&gt;${exampleDir}&lt;/a&gt;&lt;/li&gt; \1'/>
	</target>
</project>

